<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <groupId>com.kikop</groupId>
    <artifactId>C200myimdemo</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <name>${project.artifactId}</name>
    <description>${project.artifactId}并发通信框架项目</description>

    <modules>

        <module>mycommon</module>
        <module>myuserserver</module>
        <module>myauthserver</module>
        <module>mygatewayserver</module>
        <module>mybusinessmodule</module>
    </modules>

    <properties>

        <!--begin add common version define-->

        <!--1.文件编码-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <encoding>UTF-8</encoding>

        <!--2.JDK-->
        <!--指定java版本即可,maven会默认用 1.5的版本编译,导致编译出错-->
        <java.version>1.8</java.version>

        <!--3.maven-->
        <!--指定maven编译JDK版本-->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <!--跳过maven测试-->
        <maven.test.skip>true</maven.test.skip>
        <maven_compiler.version>3.8.0</maven_compiler.version>

        <!--end add common version define-->

        <!--lombok-->
        <lombok.version>1.18.10</lombok.version>

        <fastjson.version>1.2.79</fastjson.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <jjwt.version>0.9.1</jjwt.version>

        <redisson.version>3.13.1</redisson.version>
        <poi.version>4.1.2</poi.version>
        <transmittable-thread-local.version>2.12.2</transmittable-thread-local.version>

        <!--pagehelper和 mybatis-->
        <pagehelper.boot.version>1.4.1</pagehelper.boot.version>
        <spring-boot.mybatis>2.2.2</spring-boot.mybatis>

        <druid.version>1.2.8</druid.version>
        <dynamic-ds.version>3.5.0</dynamic-ds.version>

        <!--zookeeper-->
        <zookeeper.version>3.4.10</zookeeper.version>
        <!--curator-->
        <!--netflix公司开源的一套 Zookeeper客户端框架-->
        <!--注意:curator版本4.0.4对应ZookeePer的版本:3.4.x-->
        <!--原生的为ZkClient,但社区不活跃, 几乎没有参考文档-->
        <curator.version>4.0.0</curator.version>


        <netty-all.version>4.1.67.Final</netty-all.version>

        <spring-boot.version>2.6.3</spring-boot.version>

        <feign.version>11.8</feign.version>

    </properties>

    <dependencies>

        <!--1.lombok-->
        <!--所有模块都用,基于注解Slf4j-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

    </dependencies>

    <dependencyManagement>

        <dependencies>

            <!-- 1.基于 Spring Boot 2.6.3 -->
            <!--解决 maven的单继承问题-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <!--type:pom，说明导入的是一个父模块-->
                <type>pom</type>
                <!--scope:import,说明把父模块中的jar包导入进来-->
                <scope>import</scope>
            </dependency>

            <!-- 2.fastjson 解析器和生成器 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.3.1</version>
            </dependency>

            <!-- 3.JWT -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <!-- 4.Apache commons-lang3 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <!-- 5.excel工具 -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>

            <!-- 6.线程传递值 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId>
                <version>${transmittable-thread-local.version}</version>
            </dependency>

            <!-- 7.Druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- 7.1.Dynamic DataSource -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
                <version>${dynamic-ds.version}</version>
            </dependency>

            <!-- 8.Mybatis 依赖配置 -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${spring-boot.mybatis}</version>
            </dependency>

            <!--8.1.pagehelper-spring-boot-starter-->
            <!--因为是在dempendencyManager中,只是版本定义,需先引入:mybatis-spring-boot-starter-->
            <!-- pagehelper 分页插件 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.boot.version}</version>
            </dependency>


            <!--9.zookeeper-->
            <!-- https://mvnrepository.com/artifact/org.apache.zookeeper/zookeeper -->
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
            </dependency>

            <!--10.curator-->
            <!--10.1.curator-framework,对底层 ZK API的一些封装-->
            <!--单独引用zookeeper-->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.zookeeper</groupId>
                        <artifactId>zookeeper</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--10.2.zookeeper client-api:curator,提供了一些客户端操作,如重试策略等-->
            <!--单独引用zookeeper-->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-client</artifactId>
                <version>${curator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.zookeeper</groupId>
                        <artifactId>zookeeper</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--10.3.curator-recipes,封装了一些高级特性,如 cache事件监听、选举、分布式锁、分布式计数器、分布式Barrier等-->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>

            <!--11.feign-httpclient-->
            <!--feign的 Http客户端-->
            <!--可能是 SpringCloud中指定了版本-->
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-httpclient</artifactId>
                <version>${feign.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-ribbon</artifactId>
                <version>${feign.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-jackson</artifactId>
                <version>${feign.version}</version>
            </dependency>

            <!--12.netty-all-->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty-all.version}</version>
            </dependency>

            <!--13.当前模块自定义模块(方便版本引用)-->

            <!--13.1.mycommon-->
            <!--13.1.1.mycommon-core-->
            <dependency>
                <groupId>com.kikop</groupId>
                <artifactId>mycommon-core</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>

            <!--13.1.2.mycommon-redis-->
            <dependency>
                <groupId>com.kikop</groupId>
                <artifactId>mycommon-redis</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>

            <!--13.1.3.mycommon-zk-->
            <dependency>
                <groupId>com.kikop</groupId>
                <artifactId>mycommon-zk</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>

            <!--13.1.4.mycommon-protocol-->
            <dependency>
                <groupId>com.kikop</groupId>
                <artifactId>mycommon-protocol</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>

            <!--13.1.5.mycommon-rocketmq-->
            <dependency>
                <groupId>com.kikop</groupId>
                <artifactId>mycommon-rocketmq</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>

            <!--13.1.6.mycommon-security-->
            <dependency>
                <groupId>com.kikop</groupId>
                <artifactId>mycommon-security</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>

            <!--13.3.myauthserver-->
            <dependency>
                <groupId>com.kikop</groupId>
                <artifactId>myauthserver</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>


            <!--13.2.mygatewayserver-->
            <dependency>
                <groupId>com.kikop</groupId>
                <artifactId>mygatewayserver</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>


            <!--13.4.mynettyserver-->
            <dependency>
                <groupId>com.kikop</groupId>
                <artifactId>mynettyserver</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>

            <!--当前模块自定义模块-->

        </dependencies>


    </dependencyManagement>

</project>
